Perfect! Let me generate a **working Helm template + GitHub Actions workflow** for an Azure AKS deployment with:

- 🔑 **Secrets pulled from Azure Key Vault**
- 🚪 **Ingress**
- 🧱 **Service and Deployment**
- 🛠️ **GitHub Actions workflow**
- 🗂️ Support for multiple environments and services

We’ll assume:
- You're deploying a service like `user-service`
- You're using a chart per service
- You have a `KeyVault` where secrets are stored (like DB credentials, etc.)
- The Helm chart handles config via values files (`values-dev.yaml`, etc.)

---

## 📁 Directory Structure (within your `deployment-repo/`)

```
deployment-repo/
├── services/
│   └── user-service/
│       ├── Chart.yaml
│       ├── templates/
│       │   ├── deployment.yaml
│       │   ├── service.yaml
│       │   └── ingress.yaml
│       ├── values-dev.yaml
│       ├── values-staging.yaml
│       └── values-prod.yaml
└── .github/
    └── workflows/
        └── deploy.yaml
```

---

## 🔧 `deployment.yaml` (Helm template)

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-service.fullname" . }}
  labels:
    app: {{ include "user-service.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "user-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "user-service.name" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.spring.profile }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-password
```

---

## 🔧 `service.yaml`

```yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ include "user-service.fullname" . }}
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: {{ include "user-service.name" . }}
```

---

## 🔧 `ingress.yaml`

```yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "user-service.fullname" . }}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "user-service.fullname" . }}
                port:
                  number: 80
```

---

## 📄 `values-dev.yaml` (env-specific config)

```yaml
replicaCount: 1

spring:
  profile: dev

image:
  repository: myacr.azurecr.io/user-service
  tag: dev-latest

ingress:
  host: dev.user.mycompany.com
```

---

## 🚀 GitHub Actions: `.github/workflows/deploy.yaml`

```yaml
name: Deploy Service to AKS

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        type: string
      environment:
        description: 'Target environment (dev, staging, prod)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      KEYVAULT_NAME: my-keyvault
      TENANT_ID: your-tenant-id

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group my-rg --name my-aks-cluster

      - name: Pull secrets from Azure Key Vault
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.KEYVAULT_NAME }}
          secrets: db-password
        id: keyvault

      - name: Create Kubernetes secret
        run: |
          kubectl create secret generic db-secret \
            --from-literal=db-password="${{ steps.keyvault.outputs.db-password }}" \
            --namespace ${{ github.event.inputs.environment }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy with Helm
        run: |
          helm upgrade --install ${{ github.event.inputs.service }} ./services/${{ github.event.inputs.service }} \
            -f ./services/${{ github.event.inputs.service }}/values-${{ github.event.inputs.environment }}.yaml \
            --namespace ${{ github.event.inputs.environment }} \
            --create-namespace
```

---

## ✅ What This Gets You

- ✅ **Single `deployment.yaml` + env-based `values.yaml` per service**
- ✅ **Secrets safely pulled from Azure Key Vault**
- ✅ **Clean ingress & service config**
- ✅ **Multi-environment support with Helm**
- ✅ **Manual deploy or CI deploy with GitHub Actions inputs**

---

Want this zipped up into a starter repo or want it tailored for specific services you're deploying? Just let me know how many services, and what they need (e.g., DB, Redis, etc.), and I can build a tailored pack for you 🚀
